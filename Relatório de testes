/* Gabrielle Brandemburg dos Anjos	1510542		3WB
   Pedro Sousa Meireles			   	1510962		3WB	*/


O compilador funcionou corretamente.

Na atribuição utilizou-se o seguinte algoritmo para padronizar as operações:
a = b +|-|* c
1) Guardar b no %edx
2) Fazer a operação com c, armazenando o resultado no %edx
3) Mover o resultado do %edx para o registrador correspondente ao a

No retorno, o algoritmo foi o seguinte:
1) Mover o valor correspondente a v1 para o registrador %eax
2) Desalocae a pilha
3) Retornar o valor

E para o desvio:
DIF: é a diferenca do endereco da linha pra onde vai o desvio e endereco da primeira instrucao apos instrucao do desvio (&linha - &instrucaoPósDesvio)
1) Guardar o endereço de todas as linhas lidas no arquivo
2) Guardar o endereco da posicao do byte que precisa ser preenchido com o endereço de desvio em um vetor de endereco de posicoes
3) Guardar o endereço da instrução logo depois da instrução de desvio em um vetor de endereços pós desvio
4) Guardar o numero da linha para onde o controle vai desviar (lido do arquivo) em um vetor de linhas de desvio
5) Finalizar a traducao de todo o codigo no arquivo, pulando os bytes do DIF ou preenchendo com 0x00
7) Enquanto houverem valores no vetor de endereço de posicoes:
6) Acessar um elemento do vetor de endereco de linha através do numero da linha de desvio
7) Subtrair o endereco da instrucao pós instrução de desvio do endereço da linha de desvio 

Testes do compilador:
(Os comentários não fazem parte da linguagem. Eles apenas mostram o desenvolvimento da função para se obter o valor esperado.)

v = c + c:
v1 = $1 + $1
ret
Resultado: Correto. Imprimiu 2.

v = c - c:
v1 = $3 - $1
ret
Resultado: Correto. Imprimiu 2.

v = c * c:
v1 = $2 * $-3
ret
Resultado: Correto. Imprimiu -6.

v = p + c:
v1 = p1 + $2
ret
Resultado: Correto. Passei 1 e imprimiu 3.

v = p - c:
v1 = p1 - $6
ret
Resultado: Correto. Passei 1 e imprimiu -5.

v = p * c:
v1 = p1 * $0
ret
Resultado: Correto. Passei 1 e imprimiu 0.

v = c + p:
v1 = $2 + p1
ret
Resultado: Correto. Passei 1 e imprimiu 3.

v = c - p:
v1 = $6 - p1
ret
Resultado: Correto. Passei 1 e imprimiu 5.

v = c * p:
v1 = $0 * p1
ret
Resultado: Correto. Passei 1 e imprimiu 0.

v = p + p:
v = p - p:
v = p * p:
v = v + v:
v = v - v:
v2 = p1 + p2	// v2 = 3
v3 = p2 - p1	// v3 = 1
v4 = p1 * p1	// v4 = 1
v1 = v2 + v3	// v1 = 4
v1 = v1 - v4	// v1 = 3
ret
Resultado: Correto. Passei 1 e 2 e imprimiu 3.

v = v + c:
v = v - c:
v = v * c:
v2 = $1 + $0	// v2 = 1
v2 = v2 * $2	// v2 = 2
v3 = v2 + $1	// v3 = 3
v4 = v3 - $7	// v4 = -4
v1 = v4 + $0	// v1 = -4
ret
Resultado: Correto. Imprimiu -4.


v = c + v:
v = c - v:
v = c * v:
v = v * v:
v2 = $1 + $0	// v2 = 1
v2 = $2 * v2	// v2 = 2
v3 = $1 + v2	// v3 = 3
v4 = $7 - v3	// v4 = 4
v1 = v4 * v2	// v1 = 8
ret
Resultado: Correto. Imprimiu 8.



p = c + c:
p1 = $1 + $0
v1 = p1 + $0
ret
Resultado: Correto. Imprimiu 1.

p = c - c:
p1 = $3 - $1
v1 = p1 + $0
ret
Resultado: Correto. Imprimiu 2.

p = c * c:
p1 = $1 * $2
v1 = p1 + $0
ret
Resultado: Correto. Imprimiu 2.

p = p + c:
p1 = p1 + $1
v1 = p1 + $0
ret
Resultado: Correto. Passei 1 e imprimiu 2.

p = p - c:
p1 = p1 - $1
v1 = p1 + $0
ret
Resultado: Correto. Passei 1 e imprimiu 0.

p = p * c:
p1 = p1 * $2
v1 = p1 + $0
ret
Resultado: Correto. Passei 1 e imprimiu 2.


p = c + p:
p1 = $1 + p1
v1 = p1 + $0
ret
Resultado: Correto. Passei 1 e imprimiu 2.

p = c - p:
p1 = $0 - p1
v1 = p1 + $0
ret
Resultado: Correto. Passei 1 e imprimiu -1.

p = c * p:
p1 = $2 * p1
v1 = p1 + $0
ret
Resultado: Correto. Passei 1 e imprimiu 2.

p = p + p:
p = p - p:
p = p * p:
p1 = p1 + p2	// p1 = 3
p2 = p2 - p1	// p2 = 2 - 3 = -1
p1 = p1 * p2	// p1 = 3
v1 = p1 + $0	// v1 = 3
ret
Resultado: Correto. Passei 1 e 2 e imprimiu -3.

p = v + c:
v1 = $1 + $0
p1 = v1 + $1
v1 = p1 + $0
ret
Resultado: Correto. Passei 1 e imprimiu 2.

p = v - c:
v1 = $1 + $0
p1 = v1 - $1
v1 = p1 + $0
ret
Resultado: Correto. Passei 1 e imprimiu 0.

p = v * c:
v1 = $1 + $0
p1 = v1 * $2
v1 = p1 + $0
ret
Resultado: Correto. Passei 1 e imprimiu 2.

p = c + v:
v1 = $1 + $0
p1 = $1 + v1
v1 = p1 + $0
ret
Resultado: Correto. Passei 1 e imprimiu 2.

p = c - v:
v1 = $1 + $0
p1 = $2 - v1
v1 = p1 + $0
ret
Resultado: Correto. Passei 1 e imprimiu 1.

p = c * v:
v1 = $1 + $0
p1 = $2 * v1
v1 = p1 + $0
ret
Resultado: Correto. Passei 1 e imprimiu 2.

p = v + v:
p = v - v:
v2 = $2 + $0	// v2 = 2
v3 = $3 + $0	// v2 = 3
p1 = v2 + v3	// p1 = 2 + 3 = 5
p2 = v2 - v3	// p2 = 2 - 3 = -1
v1 = p1 + p2	// v1 = 5 + (-1) = 4
ret
Resultado: Correto. Imprimiu 4.

p = v * v:
v2 = $2 + $0
v3 = $3 + $0
p1 = v2 * v3
v1 = p1 + $0
ret
Resultado: Correto. Imprimiu 6.

Testes de intrucoes de desvio:
Foi testado as funções exemplo na página da disciplina e funções criadas por nós para testar o resto dos possiveis casos de uso

1. Fatorial
v1 = $0 + $1
if p1 4
ret
v1 = v1 * p1
p1 = p1 - $1
if p1 4
ret

Resultados:
p1 = 3 --> imprimiu 6 (Correto); 
p1 = 4 --> imprimiu 24 (Correto); 
p1 = 12 --> imprimiu 479001600 (Correto);

2. Squad

v1 = $0 + $0          // 1: sum = 0
v2 = $1 + $0          // 2: i = 1
p1 = p1 + $1          // 3: x = x + 1
v3 = p1 - v2          // 4: aux = x - i  (será zero se x == i)
if v3 7               // 5: if (aux != 0) desvia para linha 7
ret                   // 6: retorna sum
v3 = v2 * v2          // 7: aux = i * i
v1 = v1 + v3          // 8: sum = sum + aux
v2 = v2 + $1          // 9: i = i + 1
if v2 4               // 10: if (i != 0) desvia para linha 4 (sempre desviará)

Resultados:
p1 = 3 --> imprimiu 14 (Correto)
p1 = 4 --> imprimiu 30 (Correto)
p1 = 17 --> imprimiu 1785 (Correto)

3. Menor Positivo
Funcao que recebe dois parametros (positivos maiores que zero) e retorna o menor

v2 = p1 + $0
v3 = p2 + $0
p1 = p1 - $1
if p1 7
v1 = v2 + $0
ret
p2 = p2 - $1
if p2 3
v1 = v3 + $0
ret

Resultados:
p1 = 17, p2 = 19 --> imprimiu 17 (Correto)
p1 = 100, p2 = 99 --> imprimiu 99 (Correto)
p1 = 340829, p2 = 104983 --> imprimiu 104983 (Correto)

4. Menor Positivo (local)
Alteração da menor positivo para testar variavel local (v1 e v4) -> retorna o indice da variavel de menor valor

v1 = $1000 + $0
v4 = $10000 + $0
v1 = v1 - $1
if v1 7
v1 = $1 + $0
ret
v4 = v4 - $1
if v4 3
v1 = $4 + $0
ret

Resultados:
v1 = 1000, v4 = 10000 --> imprimiu 1 (Correto)
v1 = 10000, v4 = 1000 --> imprimiu 4 (Correto)


